       IDENTIFICATION DIVISION.
       PROGRAM-ID. SQTEST1.

      **********************************************************
      * Program name:    SQTEST1
      * Original author: dastagg
      *
      * Maintenence Log
      * Date       Author        Maintenance Requirement
      * ---------  ------------  -------------------------------
      * 2020-07-29 dastagg       Sample: Get and display data from
      *                          Employee table.
      *
      **********************************************************

       DATA DIVISION.
       WORKING-STORAGE SECTION.

           COPY "sqlenv.cbl".
           COPY "sql.cbl".
           COPY "sqlca.cbl".

           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01  MYSAMPLE-Employee.
           12 ME-Emp-Number           PIC X(06).
           12 ME-First-Name           PIC X(12).
           12 ME-Middle-Init          PIC X(01).
           12 ME-Last-Name            PIC X(15).
           12 ME-Work-Dept            PIC X(03).
           12 ME-Phone-Number         PIC X(04).
           12 ME-Hire-Date            PIC X(10).
           12 ME-Job-Title            PIC X(08).
           12 ME-Edu-Level            PIC S9(04) COMP-5.
           12 ME-Gender               PIC X(01).
           12 ME-Birth-Date           PIC x(10).
           12 ME-Salary               PIC S9(9)V99 COMP-3.
           12 ME-Bonus                PIC S9(9)V99 COMP-3.
           12 ME-Commission           PIC S9(9)V99 COMP-3.

       01  DB-Connection-Info.
           12 DB-Alias                PIC X(8) VALUE 'MYSAMPLE'.
           12 DB-User-ID              PIC X(10).
           12 DB-Password.
              15 DB-Passwd-Length     PIC S9(4) COMP-5  VALUE 0.
              15 DB-Passwd-Name       PIC X(18).
           EXEC SQL END DECLARE SECTION END-EXEC.

       01  Check-Error-Variables.
           12 CEV-Error-MSG           PIC X(80).

       01  R1-Detail-Line.
           12 R1-Emp-Number           PIC X(06).
           12 R1-First-Name           PIC X(12).
           12 R1-Middle-Init          PIC X(01).
           12 R1-Last-Name            PIC X(15).
           12 R1-Work-Dept            PIC X(03).
           12 R1-Phone-Number         PIC X(04).
           12 R1-Hire-Date            PIC X(10).
           12 R1-Job-Title            PIC X(08).
           12 R1-Edu-Level            PIC ZZZ9.
           12 R1-Gender               PIC X(01).
           12 R1-Birth-Date           PIC X(10).
           12 R1-Salary               PIC $$$,$$$,$$9.99.
           12 R1-Bonus                PIC $$$,$$$,$$9.99.
           12 R1-Commission           PIC $$$,$$$,$$9.99.

       PROCEDURE DIVISION.
       0000-Mainline.
           PERFORM 1000-BOJ.
           PERFORM 2000-Process.
           PERFORM 3000-EOJ.
           GOBACK.

       1000-BOJ.
           PERFORM 1010-Get-Credentials.
           PERFORM 1800-Setup-DB-Connection.
           IF SQLCODE = 0
              PERFORM 5000-Read-DB1
           END-IF.

       1010-Get-Credentials.
           DISPLAY "SQTEST1: Display MYSAMPLE: Employee Info.".

           DISPLAY "Enter your user id (default none): "
                WITH NO ADVANCING.
           ACCEPT DB-User-ID.

           IF DB-User-ID = SPACES
             EXEC SQL CONNECT TO mysample END-EXEC
           ELSE
             DISPLAY "Enter your password : " WITH NO ADVANCING
             ACCEPT DB-Passwd-Name.

      * Passwords in a CONNECT statement must be entered in a VARCHAR
      * format with the length of the input string.
           INSPECT DB-Passwd-Name
              TALLYING DB-Passwd-Length
              FOR CHARACTERS BEFORE INITIAL " ".

       1800-Setup-DB-Connection.

           PERFORM 1810-Connect-To-DB
           IF SQLCODE = 0
              PERFORM 1820-Create-Cursor
              IF SQLCODE = 0
                 PERFORM 1830-Open-Cursor
              END-IF
           END-IF.

       1810-Connect-To-DB.
           EXEC SQL CONNECT TO :DB-Alias
                USER :DB-User-ID
                USING :DB-Passwd-Name
              END-EXEC.
           MOVE "CONNECT TO" TO CEV-Error-MSG.
           CALL "CHECKERR" USING SQLCA CEV-Error-MSG.

       1820-Create-Cursor.
           EXEC SQL DECLARE c1 CURSOR FOR
                    SELECT EMPNO,
                           FIRSTNME,
                           MIDINIT,
                           LASTNAME,
                           WORKDEPT,
                           PHONENO,
                           HIREDATE,
                           JOB,
                           EDLEVEL,
                           SEX,
                           BIRTHDATE,
                           SALARY,
                           BONUS,
                           COMM
                    FROM EMPLOYEE
           END-EXEC.

       1830-Open-Cursor.
           EXEC SQL OPEN c1 END-EXEC.
           MOVE "OPEN CURSOR" TO CEV-Error-MSG.
           CALL "CHECKERR" USING SQLCA CEV-Error-MSG.

       2000-Process.
           PERFORM 2100-Process-Data
              UNTIL SQLCODE not equal 0.

       2100-Process-Data.
           PERFORM 2110-Move-Detail-Data.
           PERFORM 5000-Read-DB1.

       2110-Move-Detail-Data.
           MOVE ME-Emp-Number TO R1-Emp-Number.
           MOVE ME-First-Name TO R1-First-Name.
           MOVE ME-Middle-Init TO R1-Middle-Init.
           MOVE ME-Last-Name TO R1-Last-Name.
           MOVE ME-Work-Dept TO R1-Work-Dept.
           MOVE ME-Phone-Number TO R1-Phone-Number.
           MOVE ME-Hire-Date TO R1-Hire-Date.
           MOVE ME-Job-Title TO R1-Job-Title.
           MOVE ME-Edu-Level TO R1-Edu-Level.
           MOVE ME-Gender TO R1-Gender.
           MOVE ME-Birth-Date TO R1-Birth-Date.
           MOVE ME-Salary TO R1-Salary.
           MOVE ME-Bonus TO R1-Bonus.
           MOVE ME-Commission TO R1-Commission.

           DISPLAY R1-Detail-Line.

       3000-EOJ.
           EXEC SQL CLOSE c1 END-EXEC.
           MOVE "CLOSE CURSOR" TO CEV-Error-MSG.
           CALL "CHECKERR" USING SQLCA CEV-Error-MSG.

           EXEC SQL CONNECT RESET END-EXEC.
           MOVE "CONNECT RESET" TO CEV-Error-MSG.
           CALL "CHECKERR" USING SQLCA CEV-Error-MSG.

       5000-Read-DB1.
           EXEC SQL FETCH c1
              INTO
                 :ME-Emp-Number,
                 :ME-First-Name,
                 :ME-Middle-Init,
                 :ME-Last-Name,
                 :ME-Work-Dept,
                 :ME-Phone-Number,
                 :ME-Hire-Date,
                 :ME-Job-Title,
                 :ME-Edu-Level,
                 :ME-Gender,
                 :ME-Birth-Date,
                 :ME-Salary,
                 :ME-Bonus,
                 :ME-Commission
           END-EXEC.
           IF SQLCODE equal 0
              NEXT SENTENCE
           ELSE
             IF SQLCODE = 100
                NEXT SENTENCE
             ELSE
              DISPLAY "*** WARNING ***"
              DISPLAY "There was a problem Fetching the cursor."
              DISPLAY "SQLCODE = " SQLCODE
              END-IF
           END-IF.
